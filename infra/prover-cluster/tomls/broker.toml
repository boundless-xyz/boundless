[market]
mcycle_price = "0.0000000001"
mcycle_price_stake_token = "0" # will fill any lock-expired orders regardless of cost
peak_prove_khz = 3000
min_deadline = 120
lookback_blocks = 100
max_stake = "50"
max_file_size = 50_000_000
max_mcycle_limit = 8000
max_concurrent_proofs = 1
max_concurrent_preflights = 1
balance_warn_threshold = "0.025"
balance_error_threshold = "0.01"
stake_balance_warn_threshold = "5"
stake_balance_error_threshold = "1"
priority_requestor_addresses = [
  "0x47c76E56Ad9316A5c1ab17CBa87a1Cc134552183", 
  "0x734dF7809c4ef94Da037449C287166D114503198"
  ]
# max_fetch_retries = 2
allow_client_addresses = [
  "0x47c76E56Ad9316A5c1ab17CBa87a1Cc134552183", # Signal contract on Base Sepolia
  "0x734dF7809c4ef94Da037449C287166D114503198" # Signal contract on Base mainnet
]
# lockin_priority_gas = 100
# lockin_gas_estimate = 1
# fulfill_gas_estimate = 1
# groth16_verify_gas_estimate = 1

[prover]
bonsai_r0_zkvm_ver = '2.3.0'
status_poll_retry_count = 3
status_poll_ms = 1000
req_retry_count = 3
req_retry_sleep_ms = 500
proof_retry_count = 1
proof_retry_sleep_ms = 500

[batcher]
batch_max_time = 1000
min_batch_size = 1
block_deadline_buffer_secs = 120
txn_timeout = 10
single_txn_fulfill = true
max_submission_attempts = 2
# batch_poll_time_ms = 500
withdraw = true
