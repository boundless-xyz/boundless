{"abi":[{"type":"constructor","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"SELECTOR","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"mockProve","inputs":[{"name":"claimDigest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct Receipt","components":[{"name":"seal","type":"bytes","internalType":"bytes"},{"name":"claimDigest","type":"bytes32","internalType":"bytes32"}]}],"stateMutability":"view"},{"type":"function","name":"mockProve","inputs":[{"name":"imageId","type":"bytes32","internalType":"bytes32"},{"name":"journalDigest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct Receipt","components":[{"name":"seal","type":"bytes","internalType":"bytes"},{"name":"claimDigest","type":"bytes32","internalType":"bytes32"}]}],"stateMutability":"view"},{"type":"function","name":"verify","inputs":[{"name":"seal","type":"bytes","internalType":"bytes"},{"name":"imageId","type":"bytes32","internalType":"bytes32"},{"name":"journalDigest","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"verifyIntegrity","inputs":[{"name":"receipt","type":"tuple","internalType":"struct Receipt","components":[{"name":"seal","type":"bytes","internalType":"bytes"},{"name":"claimDigest","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"view"},{"type":"error","name":"SelectorMismatch","inputs":[{"name":"received","type":"bytes4","internalType":"bytes4"},{"name":"expected","type":"bytes4","internalType":"bytes4"}]},{"type":"error","name":"VerificationFailed","inputs":[]}],"bytecode":{"object":"0x60a034607557601f61089e38819003918201601f19168301916001600160401b03831184841017607957808492602094604052833981010312607557516001600160e01b031981168103607557608052604051610810908161008e82396080518181816101f80152818161036401526104050152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c908163053c238d146101c2575080631599ead51461012f5780633a115bb11461011057806366cf0e4b146100ca5763ab750e7514610053575f80fd5b346100c65760606003193601126100c65760043567ffffffffffffffff81116100c657366023820112156100c65780600401359067ffffffffffffffff82116100c65736602483830101116100c6576100c49160246100bd6100b86044358335610519565b610679565b92016103b5565b005b5f80fd5b346100c65760406003193601126100c6576100e361031b565b5061010c6101006100fb6100b8602435600435610519565b610334565b6040519182918261021c565b0390f35b346100c65760206003193601126100c65761010c610100600435610334565b346100c65760206003193601126100c65760043567ffffffffffffffff81116100c65780360360406003198201126100c6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdd826004013591018112156100c657810160048101359067ffffffffffffffff82116100c6576024019080360382136100c65760246100c4930135916103b5565b346100c6575f6003193601126100c6576020907fffffffff000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000168152f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602080608095818652805160408388015280519384918260608a0152018888015e5f878488010152015160408501520116010190565b6040810190811067ffffffffffffffff82111761029157604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b60a0810190811067ffffffffffffffff82111761029157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761029157604052565b6040519061032882610275565b5f602083606081520152565b61033c61031b565b50604051907fffffffff000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000001660208301528060248301526024825261039e6044836102da565b604051916103ab83610275565b8252602082015290565b81600411806100c6577fffffffff000000000000000000000000000000000000000000000000000000008235167fffffffff000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000016908082036104eb5750506100c657600319820167ffffffffffffffff8111610291576040519161047d60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601b87011601846102da565b818352602083019336818301116100c6575f926004601c93018637830101525190209060405160208101918252602081526104b96040826102da565b519020036104c357565b7f439cc0cd000000000000000000000000000000000000000000000000000000005f5260045ffd5b7fb8b38d4c000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b905f6080604051610529816102be565b82815282602082015260405161053e81610275565b838152836020820152604082015282606082015201526040519061056182610275565b5f82525f60208301526040519061057782610275565b8152602081015f815260205f600c6040517f72697363302e4f75747075740000000000000000000000000000000000000000815260025afa1561066e576020915f9182519151905160405191858301938452604083015260608201527f02000000000000000000000000000000000000000000000000000000000000006080820152606281526106086082826102da565b604051918291518091835e8101838152039060025afa1561066e575f519060405192610633846102be565b83527fa3acc27117418996340b84e5a90f3ef4c49d22c79e44aad822ec9c313e1eb8e2602084015260408301525f6060830152608082015290565b6040513d5f823e3d90fd5b60205f60126040517f72697363302e52656365697074436c61696d0000000000000000000000000000815260025afa1561066e575f5190606081015191815192602083015193604060808501519401938451519160038310156107ad577fffffffff000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008194819460209a8b5f9b51015195604051998d8b019b8c5260408b015260608a0152608089015260a088015260f81b161660c085015260f81b161660c48201527f040000000000000000000000000000000000000000000000000000000000000060c882015260aa815261078d60ca826102da565b604051918291518091835e8101838152039060025afa1561066e575f5190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220ebd9e633d9f31279c0e57e8bb1e5accd21b7c14383e0e2d064886d42ac0c1ddf64736f6c634300081a0033","sourceMap":"1284:2531:96:-:0;;;;;;;;;;;;;-1:-1:-1;;1284:2531:96;;;;-1:-1:-1;;;;;1284:2531:96;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1284:2531:96;;;;;;2014:19;;1284:2531;;;;;;;;2014:19;1284:2531;;;;;;;;;;;;;;;;;-1:-1:-1;1284:2531:96;;;;;;-1:-1:-1;1284:2531:96;;;;;-1:-1:-1;1284:2531:96","linkReferences":{}},"deployedBytecode":{"object":"0x6080806040526004361015610012575f80fd5b5f3560e01c908163053c238d146101c2575080631599ead51461012f5780633a115bb11461011057806366cf0e4b146100ca5763ab750e7514610053575f80fd5b346100c65760606003193601126100c65760043567ffffffffffffffff81116100c657366023820112156100c65780600401359067ffffffffffffffff82116100c65736602483830101116100c6576100c49160246100bd6100b86044358335610519565b610679565b92016103b5565b005b5f80fd5b346100c65760406003193601126100c6576100e361031b565b5061010c6101006100fb6100b8602435600435610519565b610334565b6040519182918261021c565b0390f35b346100c65760206003193601126100c65761010c610100600435610334565b346100c65760206003193601126100c65760043567ffffffffffffffff81116100c65780360360406003198201126100c6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdd826004013591018112156100c657810160048101359067ffffffffffffffff82116100c6576024019080360382136100c65760246100c4930135916103b5565b346100c6575f6003193601126100c6576020907fffffffff000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000168152f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602080608095818652805160408388015280519384918260608a0152018888015e5f878488010152015160408501520116010190565b6040810190811067ffffffffffffffff82111761029157604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b60a0810190811067ffffffffffffffff82111761029157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761029157604052565b6040519061032882610275565b5f602083606081520152565b61033c61031b565b50604051907fffffffff000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000001660208301528060248301526024825261039e6044836102da565b604051916103ab83610275565b8252602082015290565b81600411806100c6577fffffffff000000000000000000000000000000000000000000000000000000008235167fffffffff000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000016908082036104eb5750506100c657600319820167ffffffffffffffff8111610291576040519161047d60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601b87011601846102da565b818352602083019336818301116100c6575f926004601c93018637830101525190209060405160208101918252602081526104b96040826102da565b519020036104c357565b7f439cc0cd000000000000000000000000000000000000000000000000000000005f5260045ffd5b7fb8b38d4c000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b905f6080604051610529816102be565b82815282602082015260405161053e81610275565b838152836020820152604082015282606082015201526040519061056182610275565b5f82525f60208301526040519061057782610275565b8152602081015f815260205f600c6040517f72697363302e4f75747075740000000000000000000000000000000000000000815260025afa1561066e576020915f9182519151905160405191858301938452604083015260608201527f02000000000000000000000000000000000000000000000000000000000000006080820152606281526106086082826102da565b604051918291518091835e8101838152039060025afa1561066e575f519060405192610633846102be565b83527fa3acc27117418996340b84e5a90f3ef4c49d22c79e44aad822ec9c313e1eb8e2602084015260408301525f6060830152608082015290565b6040513d5f823e3d90fd5b60205f60126040517f72697363302e52656365697074436c61696d0000000000000000000000000000815260025afa1561066e575f5190606081015191815192602083015193604060808501519401938451519160038310156107ad577fffffffff000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008194819460209a8b5f9b51015195604051998d8b019b8c5260408b015260608a0152608089015260a088015260f81b161660c085015260f81b161660c48201527f040000000000000000000000000000000000000000000000000000000000000060c882015260aa815261078d60ca826102da565b604051918291518091835e8101838152039060025afa1561066e575f5190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220ebd9e633d9f31279c0e57e8bb1e5accd21b7c14383e0e2d064886d42ac0c1ddf64736f6c634300081a0033","sourceMap":"1284:2531:96:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1284:2531:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2206:51;1284:2531;;2206:51;:42;1284:2531;;;;2206:42;:::i;:::-;:51;:::i;:::-;1284:2531;;2206:51;:::i;:::-;1284:2531;;;;;;;;;;-1:-1:-1;;1284:2531:96;;;;;;;:::i;:::-;;;3414:62;3424:51;:42;1284:2531;;;;3424:42;:::i;:51::-;3414:62;:::i;:::-;1284:2531;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;1284:2531:96;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;1284:2531:96;;;;;;;;;;;;;;;;-1:-1:-1;;1284:2531:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2413:19;;;;1284:2531;2413:19;;:::i;1284:2531::-;;;;;-1:-1:-1;;1284:2531:96;;;;;;1936:32;1284:2531;1936:32;1284:2531;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;1284:2531:96;;;;;-1:-1:-1;1284:2531:96;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;1284:2531:96;;;;;;;:::o;3651:162::-;1284:2531;;:::i;:::-;;;;3770:8;1284:2531;3770:8;1284:2531;3753:39;;;1284:2531;;;;;;;3753:39;;;;;;:::i;:::-;1284:2531;;;;;;:::i;:::-;;;3753:39;3745:61;;1284:2531;3651:162;:::o;2558:660::-;1284:2531;2895:1;1284:2531;;;;;;;;;2870:8;1284:2531;2870:28;;;;2866:132;;1284:2531;;;;-1:-1:-1;;1284:2531:96;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;2889:8;1284:2531;2895:1;1284:2531;;;;;;;;;;3095:19;;1284:2531;;;;3128:29;;1284:2531;;;;3128:29;;;1284:2531;3128:29;;:::i;:::-;1284:2531;3118:40;;3095:63;3091:121;;2558:660::o;3091:121::-;3181:20;2889:8;3181:20;2895:1;2889:8;3181:20;2866:132;2921:66;2889:8;2921:66;2895:1;1284:2531;;;;2889:8;2921:66;3482:329:86;;-1:-1:-1;1284:2531:96;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2739:66:86;;-1:-1:-1;1284:2531:96;3680:34:86;;2739:66;1284:2531:96;;;;;;:::i;:::-;;;;3752:33:86;;-1:-1:-1;1284:2531:96;;;-1:-1:-1;1284:2531:96;;;;;;7867:22:86;;;;;;1284:2531:96;7867:22:86;-1:-1:-1;7867:22:86;;;2496:28;;;;1284:2531:96;;8003:225:86;;;;1284:2531:96;;;;7867:22:86;;1284:2531:96;;7867:22:86;;1284:2531:96;2496:28:86;1284:2531:96;7867:22:86;;2496:28;8003:225;;;;;;;:::i;:::-;1284:2531:96;;;;;;;;;;;;;;;7983:255:86;;7867:22;7983:255;;;;;-1:-1:-1;7983:255:86;1284:2531:96;;;;;;;:::i;:::-;;;2739:66:86;1284:2531:96;3595:209:86;;1284:2531:96;;3595:209:86;;1284:2531:96;-1:-1:-1;1284:2531:96;3595:209:86;;1284:2531:96;;3595:209:86;;1284:2531:96;3482:329:86;:::o;7983:255::-;1284:2531:96;;;-1:-1:-1;1284:2531:96;;;;;3817:538:86;2496:28;-1:-1:-1;1284:2531:96;;;;;;2496:28:86;;;;;;-1:-1:-1;2496:28:86;4015:11;;;;2496:28;;;;4082:21;2496:28;4082:21;;2496:28;4121:12;1284:2531:96;4121:12:86;;;2496:28;4182:14;;;;;2496:28;2739:66;;;;;;;2496:28;;2739:66;;;;2496:28;2739:66;;-1:-1:-1;2739:66:86;4235:14;:19;2496:28;1284:2531:96;;;3929:409:86;;;;1284:2531:96;;;;2496:28:86;;1284:2531:96;4015:11:86;2496:28;;1284:2531:96;4121:12:86;2496:28;;1284:2531:96;2496:28:86;;;1284:2531:96;2496:28:86;;;;;;;;;;;;;;;;;;;;;3929:409;;;;;;;:::i;:::-;1284:2531:96;;;;;;;;;;;;;;;3909:439:86;;2496:28;3909:439;;;;;-1:-1:-1;3909:439:86;3817:538;:::o;2739:66::-;;-1:-1:-1;2739:66:86;;;;;-1:-1:-1;2739:66:86","linkReferences":{},"immutableReferences":{"73758":[{"start":504,"length":32},{"start":868,"length":32},{"start":1029,"length":32}]}},"methodIdentifiers":{"SELECTOR()":"053c238d","mockProve(bytes32)":"3a115bb1","mockProve(bytes32,bytes32)":"66cf0e4b","verify(bytes,bytes32,bytes32)":"ab750e75","verifyIntegrity((bytes,bytes32))":"1599ead5"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"received\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"expected\",\"type\":\"bytes4\"}],\"name\":\"SelectorMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VerificationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimDigest\",\"type\":\"bytes32\"}],\"name\":\"mockProve\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"claimDigest\",\"type\":\"bytes32\"}],\"internalType\":\"struct Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"imageId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"journalDigest\",\"type\":\"bytes32\"}],\"name\":\"mockProve\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"claimDigest\",\"type\":\"bytes32\"}],\"internalType\":\"struct Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"imageId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"journalDigest\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"claimDigest\",\"type\":\"bytes32\"}],\"internalType\":\"struct Receipt\",\"name\":\"receipt\",\"type\":\"tuple\"}],\"name\":\"verifyIntegrity\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"mockProve(bytes32)\":{\"details\":\"You can calculate the claimDigest from a ReceiptClaim by using ReceiptClaimLib.\"},\"verify(bytes,bytes32,bytes32)\":{\"details\":\"This method additionally ensures that the input hash is all-zeros (i.e. no committed input), the exit code is (Halted, 0), and there are no assumptions (i.e. the receipt is unconditional).\",\"params\":{\"imageId\":\"The identifier for the guest program.\",\"journalDigest\":\"The SHA-256 digest of the journal bytes.\",\"seal\":\"The encoded cryptographic proof (i.e. SNARK).\"}},\"verifyIntegrity((bytes,bytes32))\":{\"params\":{\"receipt\":\"The receipt to be verified.\"}}},\"stateVariables\":{\"SELECTOR\":{\"details\":\"A selector is not intended to be collision resistant, in that it is possible to find      two preimages that result in the same selector. This is acceptable since it's purpose      to a route a request among a set of trusted verifiers, and to make errors of sending a      receipt to a mismatching verifiers easier to debug. It is analogous to the ABI      function selectors.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"SelectorMismatch(bytes4,bytes4)\":[{\"notice\":\"Error raised when this verifier receives a receipt with a selector that does not match         its own. The selector value is calculated from the verifier parameters, and so this         usually indicates a mismatch between the version of the prover and this verifier.\"}],\"VerificationFailed()\":[{\"notice\":\"Error raised when cryptographic verification of the zero-knowledge proof fails.\"}]},\"kind\":\"user\",\"methods\":{\"SELECTOR()\":{\"notice\":\"A short key attached to the seal to select the correct verifier implementation.\"},\"mockProve(bytes32)\":{\"notice\":\"Construct a mock receipt for the given claim digest.\"},\"mockProve(bytes32,bytes32)\":{\"notice\":\"Construct a mock receipt for the given image ID and journal.\"},\"verify(bytes,bytes32,bytes32)\":{\"notice\":\"Verify that the given seal is a valid RISC Zero proof of execution with the     given image ID and journal digest. Reverts on failure.\"},\"verifyIntegrity((bytes,bytes32))\":{\"notice\":\"Verify that the given receipt is a valid RISC Zero receipt, ensuring the `seal` is valid a cryptographic proof of the execution with the given `claim`. Reverts on failure.\"}},\"notice\":\"Mock verifier contract for RISC Zero receipts of execution.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/risc0-ethereum/contracts/src/test/RiscZeroMockVerifier.sol\":\"RiscZeroMockVerifier\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":risc0-ethereum/=lib/risc0-ethereum/\",\":risc0/=lib/risc0-ethereum/contracts/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"],\"viaIR\":true},\"sources\":{\"lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol\":{\"keccak256\":\"0xae73e91e4d2829b0a88176584d876382b4b7540ff07c62cb947cdf9ea43d5cf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f2dd7da39a6f9b100fc1dcde565d799462cdc7d27722d2265317c3a01619c818\",\"dweb:/ipfs/Qmd3k3kcvrtfkLqVza4jHodbFH8wvq5vmfPtwekBKtPjmz\"]},\"lib/risc0-ethereum/contracts/src/Util.sol\":{\"keccak256\":\"0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c\",\"dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg\"]},\"lib/risc0-ethereum/contracts/src/test/RiscZeroMockVerifier.sol\":{\"keccak256\":\"0x78d0c64eed6d901237c1e9f3a6cffe0a7632ff68b3f571b72e00f43322621453\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://290d76f572ffc0537155f26b1447ac4a1e690409a6d1d92d84b8ecb6a4ac60ac\",\"dweb:/ipfs/QmQ7rgKtTRaKjzYGZLfgJUFCDCWGMNPr6rWNc5AdDrX4JA\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes4","name":"received","type":"bytes4"},{"internalType":"bytes4","name":"expected","type":"bytes4"}],"type":"error","name":"SelectorMismatch"},{"inputs":[],"type":"error","name":"VerificationFailed"},{"inputs":[],"stateMutability":"view","type":"function","name":"SELECTOR","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"bytes32","name":"claimDigest","type":"bytes32"}],"stateMutability":"view","type":"function","name":"mockProve","outputs":[{"internalType":"struct Receipt","name":"","type":"tuple","components":[{"internalType":"bytes","name":"seal","type":"bytes"},{"internalType":"bytes32","name":"claimDigest","type":"bytes32"}]}]},{"inputs":[{"internalType":"bytes32","name":"imageId","type":"bytes32"},{"internalType":"bytes32","name":"journalDigest","type":"bytes32"}],"stateMutability":"view","type":"function","name":"mockProve","outputs":[{"internalType":"struct Receipt","name":"","type":"tuple","components":[{"internalType":"bytes","name":"seal","type":"bytes"},{"internalType":"bytes32","name":"claimDigest","type":"bytes32"}]}]},{"inputs":[{"internalType":"bytes","name":"seal","type":"bytes"},{"internalType":"bytes32","name":"imageId","type":"bytes32"},{"internalType":"bytes32","name":"journalDigest","type":"bytes32"}],"stateMutability":"view","type":"function","name":"verify"},{"inputs":[{"internalType":"struct Receipt","name":"receipt","type":"tuple","components":[{"internalType":"bytes","name":"seal","type":"bytes"},{"internalType":"bytes32","name":"claimDigest","type":"bytes32"}]}],"stateMutability":"view","type":"function","name":"verifyIntegrity"}],"devdoc":{"kind":"dev","methods":{"mockProve(bytes32)":{"details":"You can calculate the claimDigest from a ReceiptClaim by using ReceiptClaimLib."},"verify(bytes,bytes32,bytes32)":{"details":"This method additionally ensures that the input hash is all-zeros (i.e. no committed input), the exit code is (Halted, 0), and there are no assumptions (i.e. the receipt is unconditional).","params":{"imageId":"The identifier for the guest program.","journalDigest":"The SHA-256 digest of the journal bytes.","seal":"The encoded cryptographic proof (i.e. SNARK)."}},"verifyIntegrity((bytes,bytes32))":{"params":{"receipt":"The receipt to be verified."}}},"version":1},"userdoc":{"kind":"user","methods":{"SELECTOR()":{"notice":"A short key attached to the seal to select the correct verifier implementation."},"mockProve(bytes32)":{"notice":"Construct a mock receipt for the given claim digest."},"mockProve(bytes32,bytes32)":{"notice":"Construct a mock receipt for the given image ID and journal."},"verify(bytes,bytes32,bytes32)":{"notice":"Verify that the given seal is a valid RISC Zero proof of execution with the     given image ID and journal digest. Reverts on failure."},"verifyIntegrity((bytes,bytes32))":{"notice":"Verify that the given receipt is a valid RISC Zero receipt, ensuring the `seal` is valid a cryptographic proof of the execution with the given `claim`. Reverts on failure."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin/=lib/openzeppelin-contracts/","risc0-ethereum/=lib/risc0-ethereum/","risc0/=lib/risc0-ethereum/contracts/src/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/risc0-ethereum/contracts/src/test/RiscZeroMockVerifier.sol":"RiscZeroMockVerifier"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol":{"keccak256":"0xae73e91e4d2829b0a88176584d876382b4b7540ff07c62cb947cdf9ea43d5cf3","urls":["bzz-raw://f2dd7da39a6f9b100fc1dcde565d799462cdc7d27722d2265317c3a01619c818","dweb:/ipfs/Qmd3k3kcvrtfkLqVza4jHodbFH8wvq5vmfPtwekBKtPjmz"],"license":"Apache-2.0"},"lib/risc0-ethereum/contracts/src/Util.sol":{"keccak256":"0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82","urls":["bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c","dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg"],"license":"Apache-2.0"},"lib/risc0-ethereum/contracts/src/test/RiscZeroMockVerifier.sol":{"keccak256":"0x78d0c64eed6d901237c1e9f3a6cffe0a7632ff68b3f571b72e00f43322621453","urls":["bzz-raw://290d76f572ffc0537155f26b1447ac4a1e690409a6d1d92d84b8ecb6a4ac60ac","dweb:/ipfs/QmQ7rgKtTRaKjzYGZLfgJUFCDCWGMNPr6rWNc5AdDrX4JA"],"license":"Apache-2.0"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"lib/risc0-ethereum/contracts/src/test/RiscZeroMockVerifier.sol","id":73894,"exportedSymbols":{"ExitCode":[71896],"IRiscZeroVerifier":[71963],"Output":[71909],"OutputLib":[71941],"Receipt":[71731],"ReceiptClaim":[71749],"ReceiptClaimLib":[71847],"RiscZeroMockVerifier":[73893],"SelectorMismatch":[73744],"SystemExitCode":[71901],"VerificationFailed":[71944]},"nodeType":"SourceUnit","src":"635:3181:96","nodes":[{"id":73727,"nodeType":"PragmaDirective","src":"635:23:96","nodes":[],"literals":["solidity","^","0.8",".9"]},{"id":73737,"nodeType":"ImportDirective","src":"660:202:96","nodes":[],"absolutePath":"lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol","file":"../IRiscZeroVerifier.sol","nameLocation":"-1:-1:-1","scope":73894,"sourceUnit":71964,"symbolAliases":[{"foreign":{"id":73728,"name":"ExitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71896,"src":"673:8:96","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":73729,"name":"IRiscZeroVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71963,"src":"687:17:96","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":73730,"name":"Output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71909,"src":"710:6:96","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":73731,"name":"OutputLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71941,"src":"722:9:96","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":73732,"name":"Receipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71731,"src":"737:7:96","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":73733,"name":"ReceiptClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71749,"src":"750:12:96","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":73734,"name":"ReceiptClaimLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71847,"src":"768:15:96","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":73735,"name":"SystemExitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71901,"src":"789:14:96","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":73736,"name":"VerificationFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71944,"src":"809:18:96","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":73744,"nodeType":"ErrorDefinition","src":"1153:57:96","nodes":[],"documentation":{"id":73738,"nodeType":"StructuredDocumentation","src":"864:289:96","text":"@notice Error raised when this verifier receives a receipt with a selector that does not match\n         its own. The selector value is calculated from the verifier parameters, and so this\n         usually indicates a mismatch between the version of the prover and this verifier."},"errorSelector":"b8b38d4c","name":"SelectorMismatch","nameLocation":"1159:16:96","parameters":{"id":73743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73740,"mutability":"mutable","name":"received","nameLocation":"1183:8:96","nodeType":"VariableDeclaration","scope":73744,"src":"1176:15:96","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":73739,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1176:6:96","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":73742,"mutability":"mutable","name":"expected","nameLocation":"1200:8:96","nodeType":"VariableDeclaration","scope":73744,"src":"1193:15:96","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":73741,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1193:6:96","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1175:34:96"}},{"id":73893,"nodeType":"ContractDefinition","src":"1284:2531:96","nodes":[{"id":73751,"nodeType":"UsingForDirective","src":"1341:39:96","nodes":[],"global":false,"libraryName":{"id":73748,"name":"ReceiptClaimLib","nameLocations":["1347:15:96"],"nodeType":"IdentifierPath","referencedDeclaration":71847,"src":"1347:15:96"},"typeName":{"id":73750,"nodeType":"UserDefinedTypeName","pathNode":{"id":73749,"name":"ReceiptClaim","nameLocations":["1367:12:96"],"nodeType":"IdentifierPath","referencedDeclaration":71749,"src":"1367:12:96"},"referencedDeclaration":71749,"src":"1367:12:96","typeDescriptions":{"typeIdentifier":"t_struct$_ReceiptClaim_$71749_storage_ptr","typeString":"struct ReceiptClaim"}}},{"id":73755,"nodeType":"UsingForDirective","src":"1385:27:96","nodes":[],"global":false,"libraryName":{"id":73752,"name":"OutputLib","nameLocations":["1391:9:96"],"nodeType":"IdentifierPath","referencedDeclaration":71941,"src":"1391:9:96"},"typeName":{"id":73754,"nodeType":"UserDefinedTypeName","pathNode":{"id":73753,"name":"Output","nameLocations":["1405:6:96"],"nodeType":"IdentifierPath","referencedDeclaration":71909,"src":"1405:6:96"},"referencedDeclaration":71909,"src":"1405:6:96","typeDescriptions":{"typeIdentifier":"t_struct$_Output_$71909_storage_ptr","typeString":"struct Output"}}},{"id":73758,"nodeType":"VariableDeclaration","src":"1936:32:96","nodes":[],"constant":false,"documentation":{"id":73756,"nodeType":"StructuredDocumentation","src":"1418:513:96","text":"@notice A short key attached to the seal to select the correct verifier implementation.\n @dev A selector is not intended to be collision resistant, in that it is possible to find\n      two preimages that result in the same selector. This is acceptable since it's purpose\n      to a route a request among a set of trusted verifiers, and to make errors of sending a\n      receipt to a mismatching verifiers easier to debug. It is analogous to the ABI\n      function selectors."},"functionSelector":"053c238d","mutability":"immutable","name":"SELECTOR","nameLocation":"1960:8:96","scope":73893,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":73757,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1936:6:96","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"public"},{"id":73768,"nodeType":"FunctionDefinition","src":"1975:65:96","nodes":[],"body":{"id":73767,"nodeType":"Block","src":"2004:36:96","nodes":[],"statements":[{"expression":{"id":73765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":73763,"name":"SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73758,"src":"2014:8:96","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":73764,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73760,"src":"2025:8:96","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2014:19:96","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":73766,"nodeType":"ExpressionStatement","src":"2014:19:96"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":73761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73760,"mutability":"mutable","name":"selector","nameLocation":"1994:8:96","nodeType":"VariableDeclaration","scope":73768,"src":"1987:15:96","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":73759,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1987:6:96","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1986:17:96"},"returnParameters":{"id":73762,"nodeType":"ParameterList","parameters":[],"src":"2004:0:96"},"scope":73893,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":73790,"nodeType":"FunctionDefinition","src":"2084:181:96","nodes":[],"body":{"id":73789,"nodeType":"Block","src":"2173:92:96","nodes":[],"statements":[{"expression":{"arguments":[{"id":73779,"name":"seal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73771,"src":"2200:4:96","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":73782,"name":"imageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73773,"src":"2225:7:96","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":73783,"name":"journalDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73775,"src":"2234:13:96","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":73780,"name":"ReceiptClaimLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71847,"src":"2206:15:96","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ReceiptClaimLib_$71847_$","typeString":"type(library ReceiptClaimLib)"}},"id":73781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2222:2:96","memberName":"ok","nodeType":"MemberAccess","referencedDeclaration":71800,"src":"2206:18:96","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_struct$_ReceiptClaim_$71749_memory_ptr_$","typeString":"function (bytes32,bytes32) pure returns (struct ReceiptClaim memory)"}},"id":73784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2206:42:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReceiptClaim_$71749_memory_ptr","typeString":"struct ReceiptClaim memory"}},"id":73785,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2249:6:96","memberName":"digest","nodeType":"MemberAccess","referencedDeclaration":71846,"src":"2206:49:96","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ReceiptClaim_$71749_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_ReceiptClaim_$71749_memory_ptr_$","typeString":"function (struct ReceiptClaim memory) pure returns (bytes32)"}},"id":73786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2206:51:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":73778,"name":"_verifyIntegrity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73851,"src":"2183:16:96","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_calldata_ptr_$_t_bytes32_$returns$__$","typeString":"function (bytes calldata,bytes32) view"}},"id":73787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2183:75:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73788,"nodeType":"ExpressionStatement","src":"2183:75:96"}]},"baseFunctions":[71955],"documentation":{"id":73769,"nodeType":"StructuredDocumentation","src":"2046:33:96","text":"@inheritdoc IRiscZeroVerifier"},"functionSelector":"ab750e75","implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"2093:6:96","parameters":{"id":73776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73771,"mutability":"mutable","name":"seal","nameLocation":"2115:4:96","nodeType":"VariableDeclaration","scope":73790,"src":"2100:19:96","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":73770,"name":"bytes","nodeType":"ElementaryTypeName","src":"2100:5:96","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":73773,"mutability":"mutable","name":"imageId","nameLocation":"2129:7:96","nodeType":"VariableDeclaration","scope":73790,"src":"2121:15:96","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":73772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2121:7:96","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":73775,"mutability":"mutable","name":"journalDigest","nameLocation":"2146:13:96","nodeType":"VariableDeclaration","scope":73790,"src":"2138:21:96","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":73774,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2138:7:96","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2099:61:96"},"returnParameters":{"id":73777,"nodeType":"ParameterList","parameters":[],"src":"2173:0:96"},"scope":73893,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":73805,"nodeType":"FunctionDefinition","src":"2309:131:96","nodes":[],"body":{"id":73804,"nodeType":"Block","src":"2372:68:96","nodes":[],"statements":[{"expression":{"arguments":[{"expression":{"id":73798,"name":"receipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73794,"src":"2399:7:96","typeDescriptions":{"typeIdentifier":"t_struct$_Receipt_$71731_calldata_ptr","typeString":"struct Receipt calldata"}},"id":73799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2407:4:96","memberName":"seal","nodeType":"MemberAccess","referencedDeclaration":71728,"src":"2399:12:96","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":73800,"name":"receipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73794,"src":"2413:7:96","typeDescriptions":{"typeIdentifier":"t_struct$_Receipt_$71731_calldata_ptr","typeString":"struct Receipt calldata"}},"id":73801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2421:11:96","memberName":"claimDigest","nodeType":"MemberAccess","referencedDeclaration":71730,"src":"2413:19:96","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":73797,"name":"_verifyIntegrity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73851,"src":"2382:16:96","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_calldata_ptr_$_t_bytes32_$returns$__$","typeString":"function (bytes calldata,bytes32) view"}},"id":73802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2382:51:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73803,"nodeType":"ExpressionStatement","src":"2382:51:96"}]},"baseFunctions":[71962],"documentation":{"id":73791,"nodeType":"StructuredDocumentation","src":"2271:33:96","text":"@inheritdoc IRiscZeroVerifier"},"functionSelector":"1599ead5","implemented":true,"kind":"function","modifiers":[],"name":"verifyIntegrity","nameLocation":"2318:15:96","parameters":{"id":73795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73794,"mutability":"mutable","name":"receipt","nameLocation":"2351:7:96","nodeType":"VariableDeclaration","scope":73805,"src":"2334:24:96","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Receipt_$71731_calldata_ptr","typeString":"struct Receipt"},"typeName":{"id":73793,"nodeType":"UserDefinedTypeName","pathNode":{"id":73792,"name":"Receipt","nameLocations":["2334:7:96"],"nodeType":"IdentifierPath","referencedDeclaration":71731,"src":"2334:7:96"},"referencedDeclaration":71731,"src":"2334:7:96","typeDescriptions":{"typeIdentifier":"t_struct$_Receipt_$71731_storage_ptr","typeString":"struct Receipt"}},"visibility":"internal"}],"src":"2333:26:96"},"returnParameters":{"id":73796,"nodeType":"ParameterList","parameters":[],"src":"2372:0:96"},"scope":73893,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":73851,"nodeType":"FunctionDefinition","src":"2558:660:96","nodes":[],"body":{"id":73850,"nodeType":"Block","src":"2640:578:96","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":73820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":73813,"name":"SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73758,"src":"2870:8:96","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"baseExpression":{"id":73816,"name":"seal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73808,"src":"2889:4:96","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"34","id":73817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2895:1:96","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"id":73818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"2889:8:96","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":73815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2882:6:96","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":73814,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2882:6:96","typeDescriptions":{}}},"id":73819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2882:16:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2870:28:96","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":73832,"nodeType":"IfStatement","src":"2866:132:96","trueBody":{"id":73831,"nodeType":"Block","src":"2900:98:96","statements":[{"errorCall":{"arguments":[{"arguments":[{"baseExpression":{"id":73824,"name":"seal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73808,"src":"2956:4:96","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"34","id":73825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2962:1:96","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"id":73826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"2956:8:96","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":73823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2949:6:96","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":73822,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2949:6:96","typeDescriptions":{}}},"id":73827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2949:16:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":73828,"name":"SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73758,"src":"2977:8:96","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":73821,"name":"SelectorMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73744,"src":"2921:16:96","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes4_$_t_bytes4_$returns$_t_error_$","typeString":"function (bytes4,bytes4) pure returns (error)"}},"id":73829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["2939:8:96","2967:8:96"],"names":["received","expected"],"nodeType":"FunctionCall","src":"2921:66:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":73830,"nodeType":"RevertStatement","src":"2914:73:96"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":73844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":73834,"name":"seal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73808,"src":"3105:4:96","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":73836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3105:8:96","startExpression":{"hexValue":"34","id":73835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3110:1:96","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":73833,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3095:9:96","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":73837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3095:19:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"arguments":[{"id":73841,"name":"claimDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73810,"src":"3145:11:96","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":73839,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3128:3:96","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":73840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3132:12:96","memberName":"encodePacked","nodeType":"MemberAccess","src":"3128:16:96","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":73842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3128:29:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":73838,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3118:9:96","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":73843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3118:40:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3095:63:96","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":73849,"nodeType":"IfStatement","src":"3091:121:96","trueBody":{"id":73848,"nodeType":"Block","src":"3160:52:96","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":73845,"name":"VerificationFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71944,"src":"3181:18:96","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":73846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:20:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":73847,"nodeType":"RevertStatement","src":"3174:27:96"}]}}]},"documentation":{"id":73806,"nodeType":"StructuredDocumentation","src":"2446:107:96","text":"@notice internal implementation of verifyIntegrity, factored to avoid copying calldata bytes to memory."},"implemented":true,"kind":"function","modifiers":[],"name":"_verifyIntegrity","nameLocation":"2567:16:96","parameters":{"id":73811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73808,"mutability":"mutable","name":"seal","nameLocation":"2599:4:96","nodeType":"VariableDeclaration","scope":73851,"src":"2584:19:96","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":73807,"name":"bytes","nodeType":"ElementaryTypeName","src":"2584:5:96","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":73810,"mutability":"mutable","name":"claimDigest","nameLocation":"2613:11:96","nodeType":"VariableDeclaration","scope":73851,"src":"2605:19:96","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":73809,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2605:7:96","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2583:42:96"},"returnParameters":{"id":73812,"nodeType":"ParameterList","parameters":[],"src":"2640:0:96"},"scope":73893,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":73873,"nodeType":"FunctionDefinition","src":"3301:182:96","nodes":[],"body":{"id":73872,"nodeType":"Block","src":"3397:86:96","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":73865,"name":"imageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73854,"src":"3443:7:96","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":73866,"name":"journalDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73856,"src":"3452:13:96","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":73863,"name":"ReceiptClaimLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71847,"src":"3424:15:96","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ReceiptClaimLib_$71847_$","typeString":"type(library ReceiptClaimLib)"}},"id":73864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3440:2:96","memberName":"ok","nodeType":"MemberAccess","referencedDeclaration":71800,"src":"3424:18:96","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_struct$_ReceiptClaim_$71749_memory_ptr_$","typeString":"function (bytes32,bytes32) pure returns (struct ReceiptClaim memory)"}},"id":73867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3424:42:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReceiptClaim_$71749_memory_ptr","typeString":"struct ReceiptClaim memory"}},"id":73868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3467:6:96","memberName":"digest","nodeType":"MemberAccess","referencedDeclaration":71846,"src":"3424:49:96","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ReceiptClaim_$71749_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_ReceiptClaim_$71749_memory_ptr_$","typeString":"function (struct ReceiptClaim memory) pure returns (bytes32)"}},"id":73869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3424:51:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":73862,"name":"mockProve","nodeType":"Identifier","overloadedDeclarations":[73873,73892],"referencedDeclaration":73892,"src":"3414:9:96","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_struct$_Receipt_$71731_memory_ptr_$","typeString":"function (bytes32) view returns (struct Receipt memory)"}},"id":73870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:62:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Receipt_$71731_memory_ptr","typeString":"struct Receipt memory"}},"functionReturnParameters":73861,"id":73871,"nodeType":"Return","src":"3407:69:96"}]},"documentation":{"id":73852,"nodeType":"StructuredDocumentation","src":"3224:72:96","text":"@notice Construct a mock receipt for the given image ID and journal."},"functionSelector":"66cf0e4b","implemented":true,"kind":"function","modifiers":[],"name":"mockProve","nameLocation":"3310:9:96","parameters":{"id":73857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73854,"mutability":"mutable","name":"imageId","nameLocation":"3328:7:96","nodeType":"VariableDeclaration","scope":73873,"src":"3320:15:96","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":73853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3320:7:96","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":73856,"mutability":"mutable","name":"journalDigest","nameLocation":"3345:13:96","nodeType":"VariableDeclaration","scope":73873,"src":"3337:21:96","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":73855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3337:7:96","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3319:40:96"},"returnParameters":{"id":73861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":73873,"src":"3381:14:96","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Receipt_$71731_memory_ptr","typeString":"struct Receipt"},"typeName":{"id":73859,"nodeType":"UserDefinedTypeName","pathNode":{"id":73858,"name":"Receipt","nameLocations":["3381:7:96"],"nodeType":"IdentifierPath","referencedDeclaration":71731,"src":"3381:7:96"},"referencedDeclaration":71731,"src":"3381:7:96","typeDescriptions":{"typeIdentifier":"t_struct$_Receipt_$71731_storage_ptr","typeString":"struct Receipt"}},"visibility":"internal"}],"src":"3380:16:96"},"scope":73893,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":73892,"nodeType":"FunctionDefinition","src":"3651:162:96","nodes":[],"body":{"id":73891,"nodeType":"Block","src":"3728:85:96","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"id":73885,"name":"SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73758,"src":"3770:8:96","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":73886,"name":"claimDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73876,"src":"3780:11:96","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":73883,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3753:3:96","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":73884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3757:12:96","memberName":"encodePacked","nodeType":"MemberAccess","src":"3753:16:96","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":73887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:39:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":73888,"name":"claimDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73876,"src":"3794:11:96","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":73882,"name":"Receipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71731,"src":"3745:7:96","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Receipt_$71731_storage_ptr_$","typeString":"type(struct Receipt storage pointer)"}},"id":73889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3745:61:96","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Receipt_$71731_memory_ptr","typeString":"struct Receipt memory"}},"functionReturnParameters":73881,"id":73890,"nodeType":"Return","src":"3738:68:96"}]},"documentation":{"id":73874,"nodeType":"StructuredDocumentation","src":"3489:157:96","text":"@notice Construct a mock receipt for the given claim digest.\n @dev You can calculate the claimDigest from a ReceiptClaim by using ReceiptClaimLib."},"functionSelector":"3a115bb1","implemented":true,"kind":"function","modifiers":[],"name":"mockProve","nameLocation":"3660:9:96","parameters":{"id":73877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73876,"mutability":"mutable","name":"claimDigest","nameLocation":"3678:11:96","nodeType":"VariableDeclaration","scope":73892,"src":"3670:19:96","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":73875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3670:7:96","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3669:21:96"},"returnParameters":{"id":73881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":73892,"src":"3712:14:96","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Receipt_$71731_memory_ptr","typeString":"struct Receipt"},"typeName":{"id":73879,"nodeType":"UserDefinedTypeName","pathNode":{"id":73878,"name":"Receipt","nameLocations":["3712:7:96"],"nodeType":"IdentifierPath","referencedDeclaration":71731,"src":"3712:7:96"},"referencedDeclaration":71731,"src":"3712:7:96","typeDescriptions":{"typeIdentifier":"t_struct$_Receipt_$71731_storage_ptr","typeString":"struct Receipt"}},"visibility":"internal"}],"src":"3711:16:96"},"scope":73893,"stateMutability":"view","virtual":false,"visibility":"public"}],"abstract":false,"baseContracts":[{"baseName":{"id":73746,"name":"IRiscZeroVerifier","nameLocations":["1317:17:96"],"nodeType":"IdentifierPath","referencedDeclaration":71963,"src":"1317:17:96"},"id":73747,"nodeType":"InheritanceSpecifier","src":"1317:17:96"}],"canonicalName":"RiscZeroMockVerifier","contractDependencies":[],"contractKind":"contract","documentation":{"id":73745,"nodeType":"StructuredDocumentation","src":"1212:72:96","text":"@notice Mock verifier contract for RISC Zero receipts of execution."},"fullyImplemented":true,"linearizedBaseContracts":[73893,71963],"name":"RiscZeroMockVerifier","nameLocation":"1293:20:96","scope":73894,"usedErrors":[71944,73744],"usedEvents":[]}],"license":"Apache-2.0"},"id":96}