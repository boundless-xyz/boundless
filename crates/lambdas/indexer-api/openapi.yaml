openapi: 3.0.3
info:
  title: Boundless Indexer API
  description: API for accessing staking, delegation, and Proof of Verifiable Work (PoVW) data for the Boundless protocol.
  version: 1.0.0
  contact:
    name: Boundless Development Team
servers:
  - url: /
    description: Current server

tags:
  - name: Health
    description: Health check endpoints
  - name: Staking
    description: Staking position and history endpoints
  - name: PoVW
    description: Proof of Verifiable Work rewards endpoints
  - name: Delegations
    description: Vote and reward delegation endpoints

paths:
  /health:
    get:
      tags:
        - Health
      summary: Health Check
      description: Check API health status
      operationId: getHealth
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  service:
                    type: string
                    example: indexer-api

  /v1/staking:
    get:
      tags:
        - Staking
      summary: Get Staking Summary Statistics
      description: Get global staking summary statistics across all epochs
      operationId: getStakingSummary
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakingSummaryStats'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/staking/addresses:
    get:
      tags:
        - Staking
      summary: Get Aggregate Staking Leaderboard
      description: Get the aggregate staking positions leaderboard
      operationId: getStakingLeaderboard
      parameters:
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakingAggregateResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/staking/epochs:
    get:
      tags:
        - Staking
      summary: Get All Epochs Staking Summary
      description: Get a list of all epochs with staking summary statistics
      operationId: getAllEpochsStakingSummary
      parameters:
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakingEpochsSummaryResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/staking/epochs/{epoch}:
    get:
      tags:
        - Staking
      summary: Get Epoch Staking Summary
      description: Get staking summary statistics for a specific epoch
      operationId: getStakingByEpoch
      parameters:
        - $ref: '#/components/parameters/EpochParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakingByEpochResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/staking/epochs/{epoch}/addresses:
    get:
      tags:
        - Staking
      summary: Get Epoch Staking Positions
      description: Get staking positions for a specific epoch
      operationId: getEpochStakingPositions
      parameters:
        - $ref: '#/components/parameters/EpochParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakingByEpochResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/staking/addresses/{address}:
    get:
      tags:
        - Staking
      summary: Get Staking History by Address
      description: Get complete staking history for a specific address across all epochs
      operationId: getStakingHistoryByAddress
      parameters:
        - $ref: '#/components/parameters/AddressParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
        - name: start_epoch
          in: query
          description: Filter results from this epoch onwards
          schema:
            type: integer
            minimum: 0
        - name: end_epoch
          in: query
          description: Filter results up to this epoch
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakingAddressHistoryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/staking/epochs/{epoch}/addresses/{address}:
    get:
      tags:
        - Staking
      summary: Get Staking Position by Address and Epoch
      description: Get staking position for a specific address at a specific epoch
      operationId: getStakingByAddressAndEpoch
      parameters:
        - $ref: '#/components/parameters/EpochParam'
        - $ref: '#/components/parameters/AddressParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakingPositionByEpoch'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'


  /v1/povw:
    get:
      tags:
        - PoVW
      summary: Get PoVW Summary Statistics
      description: Get global PoVW summary statistics across all epochs
      operationId: getPovwSummary
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoVWSummaryStats'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/povw/addresses:
    get:
      tags:
        - PoVW
      summary: Get All-Time PoVW Leaderboard
      description: Get the all-time PoVW leaderboard ranking all work log IDs by total rewards
      operationId: getPovwLeaderboard
      parameters:
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PovwAggregateResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/povw/epochs:
    get:
      tags:
        - PoVW
      summary: Get All Epochs Summary
      description: Get a list of all epochs with summary statistics for each
      operationId: getAllEpochsSummary
      parameters:
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpochsSummaryResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/povw/epochs/{epoch}:
    get:
      tags:
        - PoVW
      summary: Get Epoch Summary
      description: Get summary statistics for a specific epoch
      operationId: getPovwByEpoch
      parameters:
        - $ref: '#/components/parameters/EpochParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PovwByEpochResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/povw/epochs/{epoch}/addresses:
    get:
      tags:
        - PoVW
      summary: Get Epoch PoVW Leaderboard
      description: Get the PoVW leaderboard for a specific epoch
      operationId: getEpochPovwLeaderboard
      parameters:
        - $ref: '#/components/parameters/EpochParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PovwByEpochResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/povw/addresses/{address}:
    get:
      tags:
        - PoVW
      summary: Get PoVW History by Address
      description: Get complete PoVW rewards history for a specific work log ID across all epochs
      operationId: getPovwHistoryByAddress
      parameters:
        - $ref: '#/components/parameters/AddressParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
        - name: start_epoch
          in: query
          description: Filter results from this epoch onwards
          schema:
            type: integer
            minimum: 0
        - name: end_epoch
          in: query
          description: Filter results up to this epoch
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PovwAddressHistoryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/povw/epochs/{epoch}/addresses/{address}:
    get:
      tags:
        - PoVW
      summary: Get PoVW by Address and Epoch
      description: Get PoVW rewards for a specific work log ID at a specific epoch
      operationId: getPovwByAddressAndEpoch
      parameters:
        - $ref: '#/components/parameters/EpochParam'
        - $ref: '#/components/parameters/AddressParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PovwRewardByEpoch'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'


  /v1/delegations/votes/addresses:
    get:
      tags:
        - Delegations
      summary: Get Aggregate Vote Delegations
      description: Get aggregate vote delegation powers across all epochs
      operationId: getAggregateVoteDelegations
      parameters:
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegationAggregateResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/delegations/votes/epochs/{epoch}/addresses:
    get:
      tags:
        - Delegations
      summary: Get Vote Delegations by Epoch
      description: Get vote delegation powers for a specific epoch
      operationId: getVoteDelegationsByEpoch
      parameters:
        - $ref: '#/components/parameters/EpochParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegationByEpochResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/delegations/votes/addresses/{address}:
    get:
      tags:
        - Delegations
      summary: Get Vote Delegation History by Address
      description: Get vote delegation history for a specific delegate address
      operationId: getVoteDelegationHistoryByAddress
      parameters:
        - $ref: '#/components/parameters/AddressParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
        - name: start_epoch
          in: query
          description: Filter results from this epoch onwards
          schema:
            type: integer
            minimum: 0
        - name: end_epoch
          in: query
          description: Filter results up to this epoch
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegationByEpochResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/delegations/votes/epochs/{epoch}/addresses/{address}:
    get:
      tags:
        - Delegations
      summary: Get Vote Delegation by Address and Epoch
      description: Get vote delegation power for a specific delegate at a specific epoch
      operationId: getVoteDelegationByAddressAndEpoch
      parameters:
        - $ref: '#/components/parameters/EpochParam'
        - $ref: '#/components/parameters/AddressParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegationPowerByEpoch'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/delegations/rewards/addresses:
    get:
      tags:
        - Delegations
      summary: Get Aggregate Reward Delegations
      description: Get aggregate reward delegation powers across all epochs
      operationId: getAggregateRewardDelegations
      parameters:
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegationAggregateResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/delegations/rewards/epochs/{epoch}/addresses:
    get:
      tags:
        - Delegations
      summary: Get Reward Delegations by Epoch
      description: Get reward delegation powers for a specific epoch
      operationId: getRewardDelegationsByEpoch
      parameters:
        - $ref: '#/components/parameters/EpochParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegationByEpochResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/delegations/rewards/addresses/{address}:
    get:
      tags:
        - Delegations
      summary: Get Reward Delegation History by Address
      description: Get reward delegation history for a specific delegate address
      operationId: getRewardDelegationHistoryByAddress
      parameters:
        - $ref: '#/components/parameters/AddressParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
        - name: start_epoch
          in: query
          description: Filter results from this epoch onwards
          schema:
            type: integer
            minimum: 0
        - name: end_epoch
          in: query
          description: Filter results up to this epoch
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegationByEpochResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/delegations/rewards/epochs/{epoch}/addresses/{address}:
    get:
      tags:
        - Delegations
      summary: Get Reward Delegation by Address and Epoch
      description: Get reward delegation power for a specific delegate at a specific epoch
      operationId: getRewardDelegationByAddressAndEpoch
      parameters:
        - $ref: '#/components/parameters/EpochParam'
        - $ref: '#/components/parameters/AddressParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegationPowerByEpoch'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  parameters:
    LimitParam:
      name: limit
      in: query
      description: Maximum number of results to return
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 50

    OffsetParam:
      name: offset
      in: query
      description: Number of results to skip for pagination
      schema:
        type: integer
        minimum: 0
        default: 0

    EpochParam:
      name: epoch
      in: path
      required: true
      description: Epoch number (2-day period)
      schema:
        type: integer
        minimum: 0

    AddressParam:
      name: address
      in: path
      required: true
      description: Ethereum address (0x-prefixed, checksummed)
      schema:
        type: string
        pattern: '^0x[a-fA-F0-9]{40}$'
        example: '0x2408e37489c231f883126c87e8aadbad782a040a'

  schemas:
    Pagination:
      type: object
      required:
        - count
        - offset
        - limit
      properties:
        count:
          type: integer
          description: Number of items in this response
        offset:
          type: integer
          description: Offset used for this response
        limit:
          type: integer
          description: Maximum items per response

    StakingPositionAggregate:
      type: object
      required:
        - staker_address
        - total_staked
        - is_withdrawing
        - epochs_participated
      properties:
        rank:
          type: integer
          nullable: true
          description: Leaderboard rank (only present in leaderboard contexts)
        staker_address:
          type: string
          description: Ethereum address of the staker
        total_staked:
          type: string
          description: Total amount staked (in wei)
        is_withdrawing:
          type: boolean
          description: Whether the staker is withdrawing
        rewards_delegated_to:
          type: string
          nullable: true
          description: Address rewards are delegated to
        votes_delegated_to:
          type: string
          nullable: true
          description: Address votes are delegated to
        epochs_participated:
          type: integer
          description: Number of epochs participated

    StakingPositionByEpoch:
      type: object
      required:
        - staker_address
        - epoch
        - staked_amount
        - is_withdrawing
      properties:
        rank:
          type: integer
          nullable: true
          description: Leaderboard rank (only present in leaderboard contexts, not in individual address queries)
        staker_address:
          type: string
          description: Ethereum address of the staker
        epoch:
          type: integer
          description: Epoch number
        staked_amount:
          type: string
          description: Amount staked in this epoch (in wei)
        is_withdrawing:
          type: boolean
          description: Whether the staker is withdrawing
        rewards_delegated_to:
          type: string
          nullable: true
          description: Address rewards are delegated to
        votes_delegated_to:
          type: string
          nullable: true
          description: Address votes are delegated to

    StakingAddressSummary:
      type: object
      required:
        - staker_address
        - total_staked
        - total_staked_formatted
        - is_withdrawing
        - epochs_participated
        - total_rewards_generated
        - total_rewards_generated_formatted
      properties:
        staker_address:
          type: string
          description: Ethereum address of the staker
        total_staked:
          type: string
          description: Total amount staked (in wei)
        total_staked_formatted:
          type: string
          description: Total amount staked (human-readable)
        is_withdrawing:
          type: boolean
          description: Whether the staker is withdrawing
        rewards_delegated_to:
          type: string
          nullable: true
          description: Address rewards are delegated to
        votes_delegated_to:
          type: string
          nullable: true
          description: Address votes are delegated to
        epochs_participated:
          type: integer
          description: Number of epochs participated
        total_rewards_generated:
          type: string
          description: Total rewards generated (in wei)
        total_rewards_generated_formatted:
          type: string
          description: Total rewards generated (human-readable)

    PovwRewardAggregate:
      type: object
      required:
        - work_log_id
        - total_work_submitted
        - total_actual_rewards
        - total_uncapped_rewards
        - epochs_participated
      properties:
        rank:
          type: integer
          nullable: true
          description: Leaderboard rank
        work_log_id:
          type: string
          description: Work log ID (Ethereum address format)
        total_work_submitted:
          type: string
          description: Total work submitted across all epochs
        total_actual_rewards:
          type: string
          description: Total actual rewards received (after capping)
        total_uncapped_rewards:
          type: string
          description: Total rewards before capping
        epochs_participated:
          type: integer
          description: Number of epochs participated

    PovwRewardByEpoch:
      type: object
      required:
        - work_log_id
        - epoch
        - work_submitted
        - percentage
        - uncapped_rewards
        - reward_cap
        - actual_rewards
        - is_capped
        - staked_amount
      properties:
        rank:
          type: integer
          nullable: true
          description: Leaderboard rank (only in list responses)
        work_log_id:
          type: string
          description: Work log ID (Ethereum address format)
        epoch:
          type: integer
          description: Epoch number
        work_submitted:
          type: string
          description: Amount of work submitted in this epoch
        percentage:
          type: number
          format: double
          description: Percentage of total work in epoch
        uncapped_rewards:
          type: string
          description: Rewards before capping (in wei)
        reward_cap:
          type: string
          description: Maximum rewards allowed based on stake (in wei)
        actual_rewards:
          type: string
          description: Actual rewards received (in wei)
        is_capped:
          type: boolean
          description: Whether rewards were capped
        staked_amount:
          type: string
          description: Amount staked (in wei)

    DelegationPowerAggregate:
      type: object
      required:
        - rank
        - delegate_address
        - power
        - delegator_count
        - delegators
        - epochs_participated
      properties:
        rank:
          type: integer
          description: Leaderboard rank
        delegate_address:
          type: string
          description: Ethereum address of the delegate
        power:
          type: string
          description: Total delegation power (in wei)
        delegator_count:
          type: integer
          description: Number of delegators
        delegators:
          type: array
          items:
            type: string
          description: List of delegator addresses
        epochs_participated:
          type: integer
          description: Number of epochs participated

    DelegationPowerByEpoch:
      type: object
      required:
        - delegate_address
        - epoch
        - power
        - delegator_count
        - delegators
      properties:
        rank:
          type: integer
          description: Leaderboard rank (only present in list/leaderboard responses, absent for individual address queries)
        delegate_address:
          type: string
          description: Ethereum address of the delegate
        epoch:
          type: integer
          description: Epoch number
        power:
          type: string
          description: Delegation power in this epoch (in wei)
        delegator_count:
          type: integer
          description: Number of delegators
        delegators:
          type: array
          items:
            type: string
          description: List of delegator addresses

    StakingSummaryStats:
      type: object
      required:
        - current_total_staked
        - current_total_staked_formatted
        - total_unique_stakers
        - current_active_stakers
        - current_withdrawing
      properties:
        current_total_staked:
          type: string
          description: Current total amount staked (in wei)
        current_total_staked_formatted:
          type: string
          description: Current total staked (human-readable)
        total_unique_stakers:
          type: integer
          description: Total number of unique stakers all-time
        current_active_stakers:
          type: integer
          description: Number of currently active stakers
        current_withdrawing:
          type: integer
          description: Number of stakers currently withdrawing
        total_staking_emissions_all_time:
          type: string
          nullable: true
          description: Total staking emissions distributed all-time (in wei)
        total_staking_emissions_all_time_formatted:
          type: string
          nullable: true
          description: Total staking emissions all-time (human-readable)
        last_updated_at:
          type: string
          nullable: true
          description: Last update timestamp

    StakingAggregateResponse:
      type: object
      required:
        - entries
        - pagination
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/StakingPositionAggregate'
        pagination:
          $ref: '#/components/schemas/Pagination'

    StakingByEpochResponse:
      type: object
      required:
        - entries
        - pagination
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/StakingPositionByEpoch'
        pagination:
          $ref: '#/components/schemas/Pagination'

    StakingAddressHistoryResponse:
      type: object
      required:
        - entries
        - pagination
        - summary
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/StakingPositionByEpoch'
        pagination:
          $ref: '#/components/schemas/Pagination'
        summary:
          $ref: '#/components/schemas/StakingAddressSummary'

    StakingEpochsSummaryResponse:
      type: object
      required:
        - entries
        - pagination
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/EpochStakingSummary'
        pagination:
          $ref: '#/components/schemas/Pagination'

    EpochStakingSummary:
      type: object
      required:
        - epoch
        - total_staked
        - total_staked_formatted
        - num_stakers
        - num_withdrawing
        - total_staking_emissions
        - total_staking_emissions_formatted
        - total_staking_power
        - total_staking_power_formatted
        - num_reward_recipients
        - epoch_start_time
        - epoch_end_time
      properties:
        epoch:
          type: integer
          description: Epoch number
        total_staked:
          type: string
          description: Total amount staked in this epoch (in wei)
        total_staked_formatted:
          type: string
          description: Total amount staked (human-readable)
        num_stakers:
          type: integer
          description: Number of stakers in this epoch
        num_withdrawing:
          type: integer
          description: Number of stakers withdrawing
        total_staking_emissions:
          type: string
          description: Total staking emissions for this epoch (in wei)
        total_staking_emissions_formatted:
          type: string
          description: Total staking emissions (human-readable)
        total_staking_power:
          type: string
          description: Total staking power in this epoch (in wei)
        total_staking_power_formatted:
          type: string
          description: Total staking power (human-readable)
        num_reward_recipients:
          type: integer
          description: Number of unique reward recipients
        epoch_start_time:
          type: integer
          description: Unix timestamp when epoch started
        epoch_end_time:
          type: integer
          description: Unix timestamp when epoch ends
        last_updated_at:
          type: string
          nullable: true
          description: Last update timestamp

    PovwAggregateResponse:
      type: object
      required:
        - entries
        - pagination
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/PovwRewardAggregate'
        pagination:
          $ref: '#/components/schemas/Pagination'

    PovwByEpochResponse:
      type: object
      required:
        - entries
        - pagination
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/PovwRewardByEpoch'
        pagination:
          $ref: '#/components/schemas/Pagination'

    PovwAddressHistoryResponse:
      type: object
      required:
        - entries
        - pagination
        - summary
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/PovwRewardByEpoch'
        pagination:
          $ref: '#/components/schemas/Pagination'
        summary:
          $ref: '#/components/schemas/PoVWAddressSummary'

    PoVWAddressSummary:
      type: object
      required:
        - work_log_id
        - total_work_submitted
        - total_work_submitted_formatted
        - total_actual_rewards
        - total_actual_rewards_formatted
        - total_uncapped_rewards
        - total_uncapped_rewards_formatted
        - epochs_participated
      properties:
        work_log_id:
          type: string
          description: Work log ID (Ethereum address format)
        total_work_submitted:
          type: string
          description: Total work submitted across all epochs
        total_work_submitted_formatted:
          type: string
          description: Total work submitted (human-readable)
        total_actual_rewards:
          type: string
          description: Total actual rewards received (after capping, in wei)
        total_actual_rewards_formatted:
          type: string
          description: Total actual rewards (human-readable)
        total_uncapped_rewards:
          type: string
          description: Total rewards before capping (in wei)
        total_uncapped_rewards_formatted:
          type: string
          description: Total uncapped rewards (human-readable)
        epochs_participated:
          type: integer
          description: Number of epochs participated

    EpochsSummaryResponse:
      type: object
      required:
        - entries
        - pagination
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/EpochPoVWSummary'
        pagination:
          $ref: '#/components/schemas/Pagination'

    PoVWSummaryStats:
      type: object
      required:
        - total_epochs_with_work
        - total_unique_work_log_ids
        - total_work_all_time
        - total_work_all_time_formatted
        - total_emissions_all_time
        - total_emissions_all_time_formatted
        - total_capped_rewards_all_time
        - total_capped_rewards_all_time_formatted
        - total_uncapped_rewards_all_time
        - total_uncapped_rewards_all_time_formatted
      properties:
        total_epochs_with_work:
          type: integer
          description: Total number of epochs with work submitted
        total_unique_work_log_ids:
          type: integer
          description: Total number of unique work log IDs
        total_work_all_time:
          type: string
          description: Total work submitted all-time
        total_work_all_time_formatted:
          type: string
          description: Total work all-time (human-readable)
        total_emissions_all_time:
          type: string
          description: Total emissions distributed all-time (in wei)
        total_emissions_all_time_formatted:
          type: string
          description: Total emissions all-time (human-readable)
        total_capped_rewards_all_time:
          type: string
          description: Total capped rewards distributed all-time (in wei)
        total_capped_rewards_all_time_formatted:
          type: string
          description: Total capped rewards all-time (human-readable)
        total_uncapped_rewards_all_time:
          type: string
          description: Total uncapped rewards all-time before capping (in wei)
        total_uncapped_rewards_all_time_formatted:
          type: string
          description: Total uncapped rewards all-time (human-readable)
        last_updated_at:
          type: string
          nullable: true
          description: Last update timestamp

    EpochPoVWSummary:
      type: object
      required:
        - epoch
        - total_work
        - total_work_formatted
        - total_emissions
        - total_emissions_formatted
        - total_capped_rewards
        - total_capped_rewards_formatted
        - total_uncapped_rewards
        - total_uncapped_rewards_formatted
        - epoch_start_time
        - epoch_end_time
        - num_participants
      properties:
        epoch:
          type: integer
          description: Epoch number
        total_work:
          type: string
          description: Total work submitted in this epoch
        total_work_formatted:
          type: string
          description: Total work (human-readable)
        total_emissions:
          type: string
          description: Total emissions for this epoch (in wei)
        total_emissions_formatted:
          type: string
          description: Total emissions (human-readable)
        total_capped_rewards:
          type: string
          description: Total capped rewards distributed (in wei)
        total_capped_rewards_formatted:
          type: string
          description: Total capped rewards (human-readable)
        total_uncapped_rewards:
          type: string
          description: Total uncapped rewards before capping (in wei)
        total_uncapped_rewards_formatted:
          type: string
          description: Total uncapped rewards (human-readable)
        epoch_start_time:
          type: integer
          description: Unix timestamp when epoch started
        epoch_end_time:
          type: integer
          description: Unix timestamp when epoch ends
        num_participants:
          type: integer
          description: Number of participants in this epoch
        last_updated_at:
          type: string
          nullable: true
          description: Last update timestamp

    DelegationAggregateResponse:
      type: object
      required:
        - entries
        - pagination
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/DelegationPowerAggregate'
        pagination:
          $ref: '#/components/schemas/Pagination'

    DelegationByEpochResponse:
      type: object
      required:
        - entries
        - pagination
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/DelegationPowerByEpoch'
        pagination:
          $ref: '#/components/schemas/Pagination'

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error type
        message:
          type: string
          description: Detailed error message

  responses:
    BadRequest:
      description: Bad Request - Invalid parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: Bad Request
            message: Invalid address format

    NotFound:
      description: Not Found - Resource does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: Not Found
            message: No data found for the specified parameters

    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: Internal Server Error
            message: An unexpected error occurred