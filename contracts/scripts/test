#!/bin/bash

set -eo pipefail

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
REPO_ROOT_DIR="${SCRIPT_DIR:?}/../.."
FOUNDRY_PROFILE=${FOUNDRY_PROFILE:-"deployment-test"}
# 0xbb001d44 is the selector for ZKVM_V2.2, update when necessary
SELECTOR=${SELECTOR:-"0xbb001d44"}
RISC0_DEV_MODE=${RISC0_DEV_MODE:-"false"}
if [[ "$RISC0_DEV_MODE" == "true" || "$RISC0_DEV_MODE" == "1" ]]; then
    echo "Running in RISC0 dev mode"
    SELECTOR="0xFFFFFFFF" # Use a mock selector in dev mode
else
    echo "Running in production mode"
fi

if [ -n "$STACK_TAG" ]; then
    DEPLOY_KEY=${CHAIN_KEY:?}-${STACK_TAG:?}
else
    DEPLOY_KEY=${CHAIN_KEY:?}
fi

load_env_var() {
    local var_name="$1"
    local config_key="$2"
    local config_file="$3"
    
    # Get current value of the variable
    local current_value=$(eval echo \$$var_name)
    
    if [ -z "$current_value" ]; then
        echo "$var_name from $config_file: " > /dev/stderr
        local new_value=$(yq eval -e "$config_key" "$REPO_ROOT_DIR/contracts/$config_file")
        [ -n "$new_value" ] && [[ "$new_value" != "null" ]] || exit 1
        export $var_name="$new_value"
    else
        echo "$var_name from env $current_value"
    fi
}

echo "Loading environment variables from deployment TOML files"
load_env_var "RPC_URL" ".chains[\"${CHAIN_KEY:?}\"].rpc-url" "deployment_secrets.toml"
load_env_var "CHAIN_ID" ".deployment[\"${DEPLOY_KEY:?}\"].id" "deployment.toml"

# Check if we're on the correct network
CONNECTED_CHAIN_ID=$(cast chain-id --rpc-url ${RPC_URL:?})
if [[ "${CONNECTED_CHAIN_ID:?}" != "${CHAIN_ID:?}" ]]; then
    echo -e "${RED}Error: connected chain id and configured chain id do not match: ${CONNECTED_CHAIN_ID:?} != ${CHAIN_ID:?} ${NC}"
    exit 1
fi

# Run Forge test
forge_test() {
    echo "Running forge test"
    FOUNDRY_PROFILE=${FOUNDRY_PROFILE:?} \
    RISC0_DEV_MODE=${RISC0_DEV_MODE:?} \
    SELECTOR=${SELECTOR:?} \
    forge test \
        --fork-url ${RPC_URL:?} \
        -vvvv
}

# Run from the repo root for consistency.
cd ${REPO_ROOT_DIR:?}

forge_test "$@"